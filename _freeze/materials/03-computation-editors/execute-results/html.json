{
  "hash": "16f1ae42b8f12704a697cb292d1973ce",
  "result": {
    "markdown": "---\nformat: \n  revealjs:\n    scrollable: false\n    slide-number: true\n    width: 1920\n    height: 1080\n    logo: \"https://www.rstudio.com/wp-content/uploads/2018/10/RStudio-Logo-Flat.png\"\n    footer: \"[Get started with Quarto](https://rstudio-conf-2022.github.io/get-started-quarto/)\"\n    css: [\"theme/theme.css\"]\n    theme: simple\n    echo: true\neditor: source\n---\n\n\n# {background-color=\"black\" background-image=\"images/calculations.jpeg\"}\n\n[03 - Code and Editors]{style=\"color: white; font-size: 250px;\"}\n\n# {background-color=\"#6a9c42\"}\n\n[Code]{style=\"color: white; font-size: 200px;\"}\n\n## Execute code\n\n\n\n\n\nOne of the biggest similarities AND differences between Quarto and RMarkdown is how it handles native code.\n\n. . .\n\nQuarto uses the `{knitr}` engine just like RMarkdown to execute R code natively, along with many other languages.\n\n. . .\n\nQuarto can _also_ use the Jupyter engine to natively execute Julia, Python, or other languages that Jupyter supports.\n\n## Choose your engine\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\nYou can specify Jupyter to use defaults\n\n```yaml\n---\nengine: jupyter\n---\n```\n\n<br>\n\nOr a specific Python version\n\n```yaml\n---\nengine: python3\n---\n```\n\n<br>\n\nOr even a specific Jupyter Kernel!\n\n```yaml\n---\njupyter: \n  kernelspec:\n    name: \"venvPython\"\n    language: \"python\"\n    display_name: \"Python 3.7 (venv Python)\"\n---\n```\n\n:::\n\n::: {.column width=\"50%\"}\n\n:::\n\n::::\n\n## Choose your engine\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\nYou can specify Jupyter to use defaults\n\n```yaml\n---\nengine: jupyter\n---\n```\n\n<br>\n\nOr a specific Python version\n\n```yaml\n---\nengine: python3\n---\n```\n\n<br>\n\nOr even a specific Jupyter Kernel!\n\n```yaml\n---\njupyter: \n  kernelspec:\n    name: \"venvPython\"\n    language: \"python\"\n    display_name: \"Python 3.7 (venv Python)\"\n---\n```\n\n:::\n\n::: {.column width=\"50%\"}\n\nIf R code is found first will default to `knitr`\n\n```yaml\n---\nformat: html\n---\n```\n\n<br>\n\nOr can force using `knitr` if you're mixing R/Python content or if your first code chunk is not R.\n\n```yaml\n---\nformat: html\nengine: knitr\n---\n```\n\n:::\n\n::::\n\n## Start your engine!\n\n![](images/howard-speed.gif)\n\n\n## `knitr` code cells\n\n[https://quarto.org/docs/reference/cells/cells-knitr.html](https://quarto.org/docs/reference/cells/cells-knitr.html)\n\n<iframe src=\"https://quarto.org/docs/reference/cells/cells-knitr.html\" width=\"1200px\" height=\"800px\"></iframe>\n\n## Anatomy of a code chunk\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n````md\n```{{r car-stuff}}\n#| echo: false\nmtcars %>% \n  distinct(cyl)\n```\n````\n\n:::\n\n::: {.column width=\"50%\"}\n\n- Has 3x backticks on each end ```` ``` ````  \n- Place engine (`r` and chunk label `label`) between curly braces `{r label}`  \n- Place options underneath, behind the `#|` (hashpipe): `#| option1: value`  \n\n:::\n\n::::\n\n\n## Code\n\n\n::: {.cell output-location='column'}\n\n````{.cell-code}\n```{{r example-code-intro}}\n#| output-location: column\n#| label: fig-airquality\n#| fig-cap: Temperature and ozone level.\n#| warning: false\n\nlibrary(ggplot2)\n\nggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\"\n)\n```\n````\n\n::: {.cell-output-display}\n![Temperature and ozone level.](03-computation-editors_files/figure-revealjs/fig-airquality-1.png){#fig-airquality width=960}\n:::\n:::\n\n\n## Code, more than just R\n\n::: columns\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{python example-code-python, eval = FALSE}}\n#| label: fig-polar\n#| fig-cap: \"A line plot on a polar axis\"\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n````\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n![](images/polar-axis.png){width=\"650px\"}\n\n:::\n\n:::\n\n## Create code chunks\n\n- You can manually type out code chunks: ```` ```{r} ````\n- the keyboard shortcut `Ctrl + Alt + I` (OS X: `Cmd + Option + I`)\n- the Add Chunk command in the editor toolbar\n\n. . .\n\nOr use the Command Palette: `Cmd + Shift + P`/`Ctrl + Shift + P`\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M255.03 261.65c6.25 6.25 16.38 6.25 22.63 0l11.31-11.31c6.25-6.25 6.25-16.38 0-22.63L253.25 192l35.71-35.72c6.25-6.25 6.25-16.38 0-22.63l-11.31-11.31c-6.25-6.25-16.38-6.25-22.63 0l-58.34 58.34c-6.25 6.25-6.25 16.38 0 22.63l58.35 58.34zm96.01-11.3l11.31 11.31c6.25 6.25 16.38 6.25 22.63 0l58.34-58.34c6.25-6.25 6.25-16.38 0-22.63l-58.34-58.34c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63L386.75 192l-35.71 35.72c-6.25 6.25-6.25 16.38 0 22.63zM624 416H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33.02-17.47-32.77-32H16c-8.8 0-16 7.2-16 16v16c0 35.2 28.8 64 64 64h512c35.2 0 64-28.8 64-64v-16c0-8.8-7.2-16-16-16zM576 48c0-26.4-21.6-48-48-48H112C85.6 0 64 21.6 64 48v336h512V48zm-64 272H128V64h384v256z\"/></svg>`{=html} Your Turn {background-color=\"#447099\"}\n\n- In a blank Quarto doc, insert a code chunk, load `tidyverse` and `palmerpenguins` and populate with some `tidyverse` code to evaluate the good ole `palmerpenguins::penguins` dataset!\n\n## Inline code\n\n\n\n````markdown\nThe mtcars dataset has `r nrow(mtcars)` rows\n````\n\n\n. . .\n\nThe mtcars dataset has 32 rows\n\n. . .\n\n\n\n````markdown\nThe mtcars dataset has an average miles/per gallon of `r mean(mtcars$mpg)`\n````\n\n\n. . .\n\nThe mtcars dataset has an average miles/per gallon of 20.090625\n\n. . .\n\n\n::: {.cell}\n\n:::\n\n\n````markdown\nfmt_mean <- scales::number_format(accuracy = 0.1)(mean(mtcars$mpg))\nThe mtcars dataset has an average miles/per gallon of `r fmt_mean`\n````\n\n\n. . .\n\nThe mtcars dataset has an average miles/per gallon of 20.1\n\n\n## Inline code with `Jupyter`\n\nPure Python/Julia Quarto documents via `engine: jupyter` can also do inline code, but this requires the use of [IPython.display.Markdown](https://ipython.readthedocs.io/en/stable/api/generated/IPython.display.html) or the [`Markdown`](https://docs.julialang.org/en/v1/stdlib/Markdown/) package for Julia\n\n\n::: {.panel-tabset}\n\n## Python\n\n````\n```{{python}}\n#| echo: false\nradius = 10\nfrom IPython.display import display, Markdown\ndisplay(Markdown(\"\"\"\nThe radius of the circle is {radius}.\n\"\"\".format(radius = radius)))\n```\n````\n\n## Julia\n\n````\n```{{julia}}\n#| echo: false\nradius = 10\nusing Markdown\nMarkdown.parse(\"\"\"\nThe radius of the circle is $radius.\n\"\"\")\n```\n````\n\n:::\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M255.03 261.65c6.25 6.25 16.38 6.25 22.63 0l11.31-11.31c6.25-6.25 6.25-16.38 0-22.63L253.25 192l35.71-35.72c6.25-6.25 6.25-16.38 0-22.63l-11.31-11.31c-6.25-6.25-16.38-6.25-22.63 0l-58.34 58.34c-6.25 6.25-6.25 16.38 0 22.63l58.35 58.34zm96.01-11.3l11.31 11.31c6.25 6.25 16.38 6.25 22.63 0l58.34-58.34c6.25-6.25 6.25-16.38 0-22.63l-58.34-58.34c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63L386.75 192l-35.71 35.72c-6.25 6.25-6.25 16.38 0 22.63zM624 416H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33.02-17.47-32.77-32H16c-8.8 0-16 7.2-16 16v16c0 35.2 28.8 64 64 64h512c35.2 0 64-28.8 64-64v-16c0-8.8-7.2-16-16-16zM576 48c0-26.4-21.6-48-48-48H112C85.6 0 64 21.6 64 48v336h512V48zm-64 272H128V64h384v256z\"/></svg>`{=html} Your Turn {background-color=\"#447099\"}\n\n- Open `materials/workshop/03-authoring/inline-code.qmd`\n\n## Code chunks options\n\nAll code chunk options at [yihui.org/knitr/options/](https://yihui.org/knitr/options/)\n\n. . .\n\nIf you've used RMarkdown before, you're likely used to:\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r, echo = \"fenced\", eval = TRUE}}\nmtcars %>% filter(mpg >= 25)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n                mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nFiat 128       32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic    30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nFiat X1-9      27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2  26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa   30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\n```\n:::\n:::\n\n\n. . .\n\nQuarto introduces the \"hash pipe\" in `#|`\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| eval: true\nmtcars %>% filter(mpg >= 25)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n                mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nFiat 128       32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic    30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nFiat X1-9      27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2  26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa   30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\n```\n:::\n:::\n\n\n## Quarto's hash pipe `#|`\n\n![](images/hash-pipe.gif){width=\"800px\"}\n\n[Weezer - Hash Pipe](https://www.youtube.com/watch?v=_9BGLtqqkVI)\n\n## Quarto chunk options\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| warning: false\n#| fig-cap: \"Air Quality\"\n#| fig-alt: \"A ggplot2 with temperature by ozone levels along with a trend line indicating the increase in temperature with increasing ozone levels.\"\n\nlibrary(ggplot2)\nggplot(airquality, aes(Ozone, Temp)) + \n        geom_point() + \n        geom_smooth(method = \"loess\", se = FALSE)\n```\n````\n\n::: {.cell-output-display}\n![Air Quality](03-computation-editors_files/figure-revealjs/unnamed-chunk-7-1.png){fig-alt='A ggplot2 with temperature by ozone levels along with a trend line indicating the increase in temperature with increasing ozone levels.' width=960}\n:::\n:::\n\n\n\n## RMarkdown vs Quarto\n\nYou _can_ mix and match or use only R Markdown or Quarto style `knitr` options. However, note the difference between 'naming' of the chunk options, typically `one.two` vs `one-two`. The `one.two` exists for backwards compatibility and you should focus on `one-two` syntax.\n\n```\nfig.align vs fig-align\nfig.dpi vs fig-dpi\n```\n\n. . .\n\n\n::: {.cell layout-align=\"left\" fig.dpi='350'}\n\n````{.cell-code}\n```{{r fig.align = \"left\"}}\n#| fig-dpi: 350\nmtcars |> \n  ggplot(aes(x = disp, y = mpg)) + geom_point()\n```\n````\n\n::: {.cell-output-display}\n![](03-computation-editors_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='left' width=960}\n:::\n:::\n\n\n## Quarto chunk options\n\n::: note\nNote that if you prefer it is still possible to include chunk options on the first line (e.g. ```` ```{r, echo = FALSE} ````). That said, we recommend using the comment-based syntax to make documents more portable and consistent across execution engines.\n\n:::\n\n. . .\n\n> Chunk options included this way use YAML syntax rather than R syntax for consistency with options provided in YAML front matter. You can still however use R code for option values by prefacing them with !expr. For example:\n\n```\n#| fig-cap: !expr paste(\"Air\", \"Quality\")\n```\n\n## Setup Chunk\n\nA special chunk! There can ONLY be one chunk named `setup`. It typically is used to set up the default values for the **entire document** with `knitr::opts_chunk$set()`\n\n. . .\n\n````\n```{{r setup}}\n#| include: false\nknitr::opts_chunk$set(\n  comment = '#>', fig.width = 6, fig.height = 6\n)\n```\n````\n\n. . .\n\nQuarto also introduces some of these as options for `execute:` in YAML.\n\n```yaml\n---\nformat: html\nexecute:\n  echo: false\n  warning: false\n---\n```\n\n## `knitr::opts_chunk` defaults\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(knitr::opts_chunk$get()[1:27])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 27\n $ eval         : logi TRUE\n $ echo         : logi TRUE\n $ results      : chr \"markup\"\n $ tidy         : logi FALSE\n $ tidy.opts    : NULL\n $ collapse     : logi FALSE\n $ prompt       : logi FALSE\n $ comment      : logi NA\n $ highlight    : logi TRUE\n $ size         : chr \"normalsize\"\n $ background   : chr \"#F7F7F7\"\n $ strip.white  : 'AsIs' logi TRUE\n $ cache        : logi FALSE\n $ cache.path   : chr \"03-computation-editors_cache/revealjs/\"\n $ cache.vars   : NULL\n $ cache.lazy   : logi TRUE\n $ dependson    : NULL\n $ autodep      : logi FALSE\n $ cache.rebuild: logi FALSE\n $ fig.keep     : chr \"high\"\n $ fig.show     : chr \"asis\"\n $ fig.align    : chr \"default\"\n $ fig.path     : chr \"03-computation-editors_files/figure-revealjs/\"\n $ dev          : chr \"png\"\n $ dev.args     : NULL\n $ dpi          : int 96\n $ fig.ext      : NULL\n```\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(knitr::opts_chunk$get()[28:53])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 26\n $ fig.width : int 10\n $ fig.height: int 5\n $ fig.env   : chr \"figure\"\n $ fig.cap   : NULL\n $ fig.scap  : NULL\n $ fig.lp    : chr \"fig:\"\n $ fig.subcap: NULL\n $ fig.pos   : chr \"\"\n $ out.width : NULL\n $ out.height: NULL\n $ out.extra : NULL\n $ fig.retina: num 2\n $ external  : logi TRUE\n $ sanitize  : logi FALSE\n $ interval  : num 1\n $ aniopts   : chr \"controls,loop\"\n $ warning   : logi FALSE\n $ error     : logi FALSE\n $ message   : logi FALSE\n $ render    : NULL\n $ ref.label : NULL\n $ child     : NULL\n $ engine    : chr \"R\"\n $ split     : logi FALSE\n $ include   : logi TRUE\n $ purl      : logi TRUE\n```\n:::\n:::\n\n\n:::\n\n::::\n\n## Code chunks are controllable\n\nSome examples\n\n| Option      | Description |\n| ----------- | ----------- |\n| `fig-height: 4` | Plots generated from this chunk will have a height of 4 inches. |\n| `fig-width: 6` | Plots generated from this chunk will have a width of 6 inches. |\n| `dpi: 150`   | Plots generated will have a dots per inch (pixel density) of 150 |\n| `echo: false` | Code will not be echoed (ie not shown) |\n| `eval: false` | Nothing will be evaluated, but code still be printed |\n| `cache: true` | Results will be cached, and chunk will not be run in subsequent renders, unless code is changed. | \n| `message: false` | No messages will be printed |\n| `warning: false` | No warnings will be printed | \n| `include: false` | No ouputs/echo/messages/etc will be returned | \n\n## There's a lot of options!\n\n[https://quarto.org/docs/reference/cells/cells-knitr.html](https://quarto.org/docs/reference/cells/cells-knitr.html)\n\n<iframe src=\"https://quarto.org/docs/reference/cells/cells-knitr.html\" height=\"800px\" width=\"1200px\"></iframe>\n\n## Chunks can be named\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/qmd-outline.png){fig-alt='A screenshot of a RMarkdown document inside RStudio. The screenshot highlights the automatically generated document outline for each chunk name.' width=80%}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n* Useful for troubleshooting (ie _where_ is the document failing on render)  \n\n```\nlabel: unnamed-chunk-23\n  |..............................|  83%\n  ordinary text without R code\n  |..............................|  85%\nlabel: unnamed-chunk-24 (with options) \nList of 2\n $ fig.dim: num [1:2] 6 4\n $ dpi    : num 150\n  |..............................|  86%\n  ordinary text without R code\n```\n:::\n\n::::\n\n# Demo: Navigating within RStudio {background-color=\"black\"}\n\n## Chunk names, good and bad\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n### Good\n\n- `chunk`\n- `myChunk`\n- `my-chunk`\n- `mychunk1`\n\n:::\n\n::: {.column width=\"50%\"}\n### Bad\n\n(These _will_ fail)\n\n- `my_chunk`\n- `my chunk`\n\n:::\n\n::::\n\n## Named chunks can be re-used!\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n````md\n```{{r myPlt}}\n#| eval: false\nggplot(mtcars, aes(x = disp, y = mpg, \n    color = factor(cyl))) +\n  geom_point()\n```\n````\n\nNote that you when using **named chunks** you can't alter the internal code, only the chunk options. This is necessary because you are referencing the initially defined code in that chunk.\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n````md\n```{{r myPlt}}\n#| eval: true\n#| dpi: 300\n#| fig-height: 6\n#| fig-width: 4\n```\n````\n\n\n::: {.cell fig.dim='[6,4]'}\n::: {.cell-output-display}\n![](03-computation-editors_files/figure-revealjs/coolPlot-1.png){width=1800}\n:::\n:::\n\n\n:::\n\n::::\n\n## Working with code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars |> \n  filter(mpg >= 25)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nFiat 128       32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic    30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nFiat X1-9      27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2  26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa   30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\n```\n:::\n:::\n\n\n## Working with code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg_cars <- mtcars |> \n  filter(mpg >= 25)\n```\n:::\n\n\n\n## Working with code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg_cars <- mtcars |> \n  filter(mpg >= 25)\n\nmpg_cars\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nFiat 128       32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic    30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nFiat X1-9      27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2  26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa   30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\n```\n:::\n:::\n\n\n## Working with code\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r mpg-cars}}\n#| eval: false\nmpg_cars <- mtcars |> \n  filter(mpg >= 25)\n\nmpg_cars\n```\n````\n:::\n\n\n## Working with code\n\n````\n```{{r mpg-cars}}\n#| echo: false\n#| eval: true\n```\n````\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n                mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nFiat 128       32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic    30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nFiat X1-9      27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2  26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa   30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\n```\n:::\n:::\n\n\n# {background-color=\"#6a9c42\"}\n\n[Editors]{style=\"color: white; font-size: 150px;\"}\n\n## RStudio\n\nRStudio has deep integration with R, `knitr` and Quarto\n\n- Render button\n- Visual Editor\n- Preview of output\n\n. . .\n\nYou should _always_ be using a recent release of the RStudio IDE - especially for the Quarto features. \n\nRStudio `2022.07` and beyond comes bundled with a production-stable release of Quarto, no additional install needed!\n\n## YAML Auto-completion\n\nQuarto + RStudio provides a rich YAML auto-completion based on text.\n\n```yaml\n---\nformat: \n  html:\n    toc-depth: 3\n    #toc-location: body\n---\n\n```\n\n. . .\n\n![](images/yaml-autocomplete.gif){height=50%}\n\n## `knitr` auto-completion\n\nYou can use tab-completion inside `knitr` chunk options for RMarkdown style or Quarto style as well.\n\n![](images/knitr-autocomplete.gif)\n\n## RStudio Visual Editor\n\n![](https://quarto.org/docs/visual-editor/images/visual-editing.png)\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M255.03 261.65c6.25 6.25 16.38 6.25 22.63 0l11.31-11.31c6.25-6.25 6.25-16.38 0-22.63L253.25 192l35.71-35.72c6.25-6.25 6.25-16.38 0-22.63l-11.31-11.31c-6.25-6.25-16.38-6.25-22.63 0l-58.34 58.34c-6.25 6.25-6.25 16.38 0 22.63l58.35 58.34zm96.01-11.3l11.31 11.31c6.25 6.25 16.38 6.25 22.63 0l58.34-58.34c6.25-6.25 6.25-16.38 0-22.63l-58.34-58.34c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63L386.75 192l-35.71 35.72c-6.25 6.25-6.25 16.38 0 22.63zM624 416H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33.02-17.47-32.77-32H16c-8.8 0-16 7.2-16 16v16c0 35.2 28.8 64 64 64h512c35.2 0 64-28.8 64-64v-16c0-8.8-7.2-16-16-16zM576 48c0-26.4-21.6-48-48-48H112C85.6 0 64 21.6 64 48v336h512V48zm-64 272H128V64h384v256z\"/></svg>`{=html} Your Turn {background-color=\"#447099\"}\n\n- Open `materials/workshop/03-authoring/visual-editor.qmd`\n\n## Quarto workflow\n\nRunning Quarto Render will call Quarto render in a background job - this will prevent Quarto rendering from cluttering up the R console, and gives you and easy way to stop.\n\n## Rendering\n\n1. Render in RStudio\n\n![](https://quarto.org/docs/tools/images/rstudio-render.png)\n\n- Starts a background job and previews the output\n\n. . .\n\n2. System shell via `quarto render`\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nquarto render document.qmd # defaults to html\nquarto render document.qmd --to pdf\nquarto render document.qmd --to docx\n```\n:::\n\n\n- Renders via terminal\n\n. . .\n\n3. R console via `quarto` R package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(quarto)\nquarto_render(\"document.qmd\") # defaults to html\nquarto_render(\"document.qmd\", output_format = \"pdf\")\n```\n:::\n\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M255.03 261.65c6.25 6.25 16.38 6.25 22.63 0l11.31-11.31c6.25-6.25 6.25-16.38 0-22.63L253.25 192l35.71-35.72c6.25-6.25 6.25-16.38 0-22.63l-11.31-11.31c-6.25-6.25-16.38-6.25-22.63 0l-58.34 58.34c-6.25 6.25-6.25 16.38 0 22.63l58.35 58.34zm96.01-11.3l11.31 11.31c6.25 6.25 16.38 6.25 22.63 0l58.34-58.34c6.25-6.25 6.25-16.38 0-22.63l-58.34-58.34c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63L386.75 192l-35.71 35.72c-6.25 6.25-6.25 16.38 0 22.63zM624 416H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33.02-17.47-32.77-32H16c-8.8 0-16 7.2-16 16v16c0 35.2 28.8 64 64 64h512c35.2 0 64-28.8 64-64v-16c0-8.8-7.2-16-16-16zM576 48c0-26.4-21.6-48-48-48H112C85.6 0 64 21.6 64 48v336h512V48zm-64 272H128V64h384v256z\"/></svg>`{=html} Your Turn {background-color=\"#447099\"}\n\n- Compare behavior of rendering from RStudio > Render, using the CLI with `quarto render`, and in R console via `quarto::quarto_render()`",
    "supporting": [
      "03-computation-editors_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}