{
  "hash": "0c8677db2789be7e9cff1a86527a9d50",
  "result": {
    "markdown": "---\nformat: \n  revealjs:\n    slide-number: true\n    width: 1920\n    height: 1080\n    logo: \"https://www.rstudio.com/wp-content/uploads/2018/10/RStudio-Logo-Flat.png\"\n    footer: \"[Get started with Quarto](https://rstudio-conf-2022.github.io/get-started-quarto/)\"\n    css: [\"theme/theme.css\"]\n    theme: simple\n    echo: true\neditor: source\neditor_options:\n  markdown:\n    canonical: true\n---\n\n\n# Websites {background-image=\"images/website.png\" background-size=\"cover\" background-color=\"black\"}\n\n<h2>Building with Quarto</h2>\n\n<h3>Tom Mock \\| 2022-07-25</h3>\n\n## Websites\n\n-   Websites are essentially `format: html` + a Quarto Project\n\n. . .\n\n-   Website is different than `format: html` in that it has *multiple pages*\n-   Website is our first exploration into Quarto Projects\n\n. . .\n\n-   Website/book are very similar in that they associate multiple pages/resources into a connected resource\n\n## \n\n### Create a website\n\n``` bash\nquarto create-project MySiteName --type website\n```\n\n. . .\n\n### Create a blog\n\n``` bash\nquarto create-project MyBlogName --type website:blog\n```\n\n. . .\n\nRStudio \\> New Project \\> New Quarto Blog\n\n![](images/quarto-blog.png)\n\n## Creating a blog\n\n    $ quarto create-project MyBlogName --type website:blog\n\n    Creating project at myblog:\n      - Created _quarto.yml\n      - Created index.qmd\n      - Created posts/welcome/index.qmd\n      - Created posts/post-with-code/index.qmd\n      - Created about.qmd\n      - Created styles.css\n      - Created posts/_metadata.yml\n\n## Navigation & Structure\n\n| File                  | Description                |\n|:----------------------|:---------------------------|\n| `_quarto.yml`         | Quarto project file.       |\n| `index.qmd`           | Blog home page.            |\n| `about.qmd`           | Blog about page.           |\n| `posts/`              | Directory containing posts |\n| `posts/_metadata.yml` | Shared options for `posts` |\n| `styles.css`          | Custom CSS for website     |\n\n## Create a blog\n\n-   A blog is a website with specific \"opinions\" already made\n-   Includes a listing automatically from `posts` directory\n-   Can build custom listings in several ways\n\n## Blog {background-image=\"images/mockup-blog.png\" background-size=\"contain\"}\n\n## Core blog workflow\n\n-   Create a new folder under `/posts` - this folder will be the \"slug\" URL\n-   Create a new `index.qmd` within the new folder\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M255.03 261.65c6.25 6.25 16.38 6.25 22.63 0l11.31-11.31c6.25-6.25 6.25-16.38 0-22.63L253.25 192l35.71-35.72c6.25-6.25 6.25-16.38 0-22.63l-11.31-11.31c-6.25-6.25-16.38-6.25-22.63 0l-58.34 58.34c-6.25 6.25-6.25 16.38 0 22.63l58.35 58.34zm96.01-11.3l11.31 11.31c6.25 6.25 16.38 6.25 22.63 0l58.34-58.34c6.25-6.25 6.25-16.38 0-22.63l-58.34-58.34c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63L386.75 192l-35.71 35.72c-6.25 6.25-6.25 16.38 0 22.63zM624 416H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33.02-17.47-32.77-32H16c-8.8 0-16 7.2-16 16v16c0 35.2 28.8 64 64 64h512c35.2 0 64-28.8 64-64v-16c0-8.8-7.2-16-16-16zM576 48c0-26.4-21.6-48-48-48H112C85.6 0 64 21.6 64 48v336h512V48zm-64 272H128V64h384v256z\"/></svg>`{=html} Your Turn {background-color=\"#447099\"}\n\n-   Create a new RStudio project and select Quarto blog\n-   Explore the directory\n-   Create a new folder in `/posts/` - title it `2022-07-26-my-first-post`\n-   Create a new blank `index.qmd` in that folder, add a `format: html` YAML header\n-   Add some text and a markdown image: `![]()`\n\n## Rendering posts\n\n-   On a specific post, Render with RStudio \\> Render\n-   Build tab \\> Render/Preview Website\n\nThese will preview the entire website\n\n. . .\n\n-   Render with `quarto render` on a specific post - this will just render that specific post\n\n. . .\n\nWhen you render the website, it will re-execute code in older posts. Not ideal in many situations!\n\n## Render together\n\nLet's render together!\n\n## Freeze\n\n> You can use the freeze option to denote that computational documents should never be re-rendered during a global project render, or alternatively only be re-rendered when their source file changes\n\n. . .\n\n``` yaml\nexecute:\n  freeze: true  # never re-render during project render\n```\n\n``` yaml\nexecute:\n  freeze: auto  # re-render only when source changes\n```\n\n. . .\n\n`freeze: true` is typically added to a `_metadata.yml` file within a specific directory, affecting all files in that directory.\n\nIn the case of a blog - the `_metadata.yml` is saved at the root of the `posts` directory.\n\n## Cache\n\nCache on the other hand, stores the results of computations for a specific file.\n\n> Note that cache invalidation is triggered by changes in chunk source code (or other cache attributes you've defined).\n\n``` yaml\nexecute:\n  cache: true\n```\n\n. . .\n\nI typically use cache throughout various types of outputs when I have computationally expensive chunks. Think a `tidymodels` workshop with grid-tuning.\n\n## Adding an About page\n\n    ---\n    twitter-card:\n      image: images/profile-preview.png\n      creator: \"@thomas_mock\"\n    open-graph: true\n    title: \"Tom Mock\"\n    image: images/profile-preview.png\n    about:\n      template: trestles\n      links:\n        - icon: twitter\n          text: Twitter\n          href: https://twitter.com/thomasmock\n        - icon: github\n          text: Github\n          href: https://github.com/jthomasmock\n    ---\n\n## About page templates\n\n``` yaml\nabout:\n  template: trestles\n```\n\n::: tabset\n## jolla\n\n![](https://quarto.org/docs/websites/images/about-jolla.png)\n\n## trestles\n\n![](https://quarto.org/docs/websites/images/about-trestles.png)\n\n## solana\n\n![](https://quarto.org/docs/websites/images/about-solana.png)\n\n## marquee\n\n![](https://quarto.org/docs/websites/images/about-marquee.png)\n\n## broadside\n\n![](https://quarto.org/docs/websites/images/about-broadside.png)\n:::\n\n## Listings\n\n![](images/mockup-blog.png)\n\n## Listings\n\n|  Type   | Description                 |\n|:-------:|:----------------------------|\n| default | A blog style list of items. |\n|  table  | A table of listings.        |\n|  grid   | A grid of listing cards.    |\n\n::: tabset\n## Default\n\n> By default, listings will appear in full width rows that display the item's metadata (author and date), title, description, and image.\n\n![](https://quarto.org/docs/websites/images/listing-default.png)\n\n## Grid\n\n> Grid style listings display a card for each item.\n\n![](https://quarto.org/docs/websites/images/listing-grid.png)\n\n## Table\n\n> The table listing style provides a traditional tabular layout.\n\n![](https://quarto.org/docs/websites/images/listing-table.png)\n:::\n\n## YOUR TURN\n\nLet's change the listing top of our blog\n\n## Listing location\n\n``` yaml\n---\ntitle: \"Listing Example\"\nlisting:\n  id: sample-listings\n  contents: posts\n  type: table\n---\n\nYou can review the following documents for additional information:\n\n::: {#sample-listings}\n:::\n```\n\n## Populating listings\n\n``` yaml\n---\ntitle: \"Listing Example\"\nlisting:\n  contents: posts\n---\n```\n\n. . .\n\n``` yaml\ntitle: \"Listing Example\"\nlisting:\n  - id: lab-reports\n    contents: \"reports/*.qmd\"\n    type: grid\n  - id: lab-notes\n    contents: \"lab-notes/*reports.qmd\"\n    type: table\n```\n\n## Manual listings\n\n``` yaml\n---\nlisting:\n  contents:\n    - author: First Author\n      title: First title\n    - name: Second Author\n      title: Second title\n---\n```\n\n. . .\n\n``` yaml\n---\nlisting:\n  contents:\n    - items.yml\n---\n```\n\n``` yaml\n- author: Tom Mock\n  title: <a href='quarto.org'>An intro to Quarto</a>\n- Author: Katie Masiello\n  title: <a href='pins.rstudio.com'>Intro to pins</a>\n```\n\n## Publishing\n\n### Static Only\n\n-   `quarto::quarto_publish_???()`\n    -   `quarto_publish_site(server = \"rstudioconnect.example.com\")`\n    -   `quarto_publish_doc(server = \"rpubs.com\")`\n    -   `quarto_publish_app(server = \"shinyapps.io\")`\n-   `quarto publish DESTINATION DOCUMENT.QMD`\n    -   `quarto publish netlify document.qmd`\n    -   `quarto publish gh-pages document.qmd`\n    -   `quarto publish connect document.qmd`\n\n### Code\n\n-   RStudio Connect\n-   `rsconnect::deployDoc(quarto = \"path/to/quarto\")`\n    -   `rsconnect::deployDoc(quarto = quarto::quarto_path())`\n\n## Quarto Project\n\n-   https://quarto.org/docs/projects/quarto-projects.html\n\n> When you create a project, a \\_quarto.yml config file is created. Here is an example of what the \\_quarto.yml\n\n``` yaml\nproject:\n  output-dir: _output\n\ntoc: true\nnumber-sections: true\nbibliography: references.bib  \n  \nformat:\n  html:\n    css: styles.css\n```\n\n## More complex example\n\n<iframe src=\"https://github.com/jthomasmock/themockup-blog/blob/master/_quarto.yml\" height=\"800px\" width=\"1200px\">\n\n</iframe>\n\n## Quarto Projects\n\n-   Minimal project has at least 1x file and 1x `_quarto.yml`\n-   A project is a directory (and can have sub-directories)\n\n. . .\n\nA typical project is used to: - Aggregate content (website/blog/book) - Share metadata (YAML config) across multiple files - Render an entire directory together or redirect output to another directory - Freeze computation across a project or team\n\n## Books\n\n    project:\n      type: book\n\n    book:\n      title: \"mybook\"\n      author: \"Jane Doe\"\n      date: \"8/18/2021\"\n      chapters:\n        - index.qmd\n        - intro.qmd\n        - summary.qmd\n        - references.qmd\n\n    bibliography: references.bib\n\n    format:\n      html:\n        theme: cosmo\n      pdf:\n        documentclass: scrreport\n      epub:\n        cover-image: cover.png\n\n## Book structure\n\n## Book crossferfs\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}